@model FamilyTaskManagement.Web.Models.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="dashboard-header mb-4">
    <div class="row align-items-center">
        <div class="col">
            <h1 class="display-6 fw-bold mb-0">
                <i class="fas fa-tachometer-alt me-3 text-primary"></i>Dashboard
            </h1>
            <p class="text-muted mb-0">Welcome back, @Context.Session.GetString("Username")!</p>
        </div>
        <div class="col-auto">
            <a href="@Url.Action("Create", "Tasks")" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i>New Task
            </a>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card stat-card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="card-title text-muted mb-1">Total Tasks</h6>
                        <h2 class="fw-bold mb-0">@Model.TotalTasks</h2>
                    </div>
                    <div class="col-auto">
                        <div class="stat-icon bg-primary">
                            <i class="fas fa-tasks"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card stat-card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="card-title text-muted mb-1">Completed</h6>
                        <h2 class="fw-bold mb-0 text-success">@Model.CompletedTasks</h2>
                    </div>
                    <div class="col-auto">
                        <div class="stat-icon bg-success">
                            <i class="fas fa-check-circle"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card stat-card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="card-title text-muted mb-1">Pending</h6>
                        <h2 class="fw-bold mb-0 text-warning">@Model.PendingTasks</h2>
                    </div>
                    <div class="col-auto">
                        <div class="stat-icon bg-warning">
                            <i class="fas fa-clock"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card stat-card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="card-title text-muted mb-1">Overdue</h6>
                        <h2 class="fw-bold mb-0 text-danger">@Model.OverdueTasks</h2>
                    </div>
                    <div class="col-auto">
                        <div class="stat-icon bg-danger">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Recent Tasks -->
    <div class="col-lg-8 mb-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-header bg-white border-0 py-3">
                <div class="row align-items-center">
                    <div class="col">
                        <h5 class="card-title mb-0 fw-bold">
                            <i class="fas fa-list-check me-2 text-primary"></i>Recent Tasks
                        </h5>
                    </div>
                    <div class="col-auto">
                        <a href="@Url.Action("Index", "Tasks")" class="btn btn-outline-primary btn-sm">
                            View All <i class="fas fa-arrow-right ms-1"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                @if (Model.RecentTasks.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="border-0">Task</th>
                                    <th class="border-0">Priority</th>
                                    <th class="border-0">Status</th>
                                    <th class="border-0">Due Date</th>
                                    <th class="border-0">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var task in Model.RecentTasks)
                                {
                                    <tr>
                                        <td>
                                            <div>
                                                <h6 class="mb-1">@task.Title</h6>
                                                <small class="text-muted">@task.Description</small>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge bg-@(task.Priority.ToLower() == "high" ? "danger" : task.Priority.ToLower() == "medium" ? "warning" : "secondary")">
                                                @task.Priority
                                            </span>
                                        </td>
                                        <td>
                                            <span class="badge bg-@(task.Status.ToLower() == "completed" ? "success" : task.Status.ToLower() == "in progress" ? "info" : "secondary")">
                                                @task.Status
                                            </span>
                                        </td>
                                        <td>
                                            @if (task.DueDate.HasValue)
                                            {
                                                <span class="@(task.DueDate.Value < DateTime.Now && task.Status.ToLower() != "completed" ? "text-danger" : "")">
                                                    @task.DueDate.Value.ToString("MMM dd, yyyy")
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No due date</span>
                                            }
                                        </td>
                                        <td>
                                            <a href="@Url.Action("Details", "Tasks", new { id = task.Id })" class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-tasks fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No tasks yet</h5>
                        <p class="text-muted">Create your first task to get started!</p>
                        <a href="@Url.Action("Create", "Tasks")" class="btn btn-primary">
                            <i class="fas fa-plus me-2"></i>Create Task
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <!-- My Assignments & Notifications -->
    <div class="col-lg-4">
        <!-- My Assignments -->
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-header bg-white border-0 py-3">
                <h5 class="card-title mb-0 fw-bold">
                    <i class="fas fa-user-check me-2 text-success"></i>My Assignments
                </h5>
            </div>
            <div class="card-body p-0">
                @if (Model.MyAssignments.Any())
                {
                    @foreach (var assignment in Model.MyAssignments)
                    {
                        <div class="assignment-item p-3 border-bottom">
                            <h6 class="mb-1">@assignment.Task?.Title</h6>
                            <small class="text-muted d-block mb-2">@assignment.Task?.Description</small>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="badge bg-@(assignment.Status.ToLower() == "completed" ? "success" : assignment.Status.ToLower() == "in progress" ? "info" : "secondary")">
                                    @assignment.Status
                                </span>
                                <small class="text-muted">@assignment.AssignedAt.ToString("MMM dd")</small>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-user-check fa-2x text-muted mb-2"></i>
                        <p class="text-muted mb-0">No assignments</p>
                    </div>
                }
            </div>
        </div>
        
        <!-- Notifications -->
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-white border-0 py-3">
                <h5 class="card-title mb-0 fw-bold">
                    <i class="fas fa-bell me-2 text-info"></i>Notifications
                </h5>
            </div>
            <div class="card-body p-0">
                @if (Model.Notifications.Any())
                {
                    @foreach (var notification in Model.Notifications)
                    {
                        <div class="notification-item p-3 border-bottom @(notification.IsRead ? "" : "bg-light")">
                            <h6 class="mb-1">@notification.Title</h6>
                            <p class="mb-2 small">@notification.Message</p>
                            <small class="text-muted">@notification.CreatedAt.ToString("MMM dd, HH:mm")</small>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-bell fa-2x text-muted mb-2"></i>
                        <p class="text-muted mb-0">No notifications</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

