@model List<FamilyTaskManagement.Web.Models.TaskDto>
@{
    ViewData["Title"] = "Tasks";
}

<div class="tasks-header mb-4">
    <div class="row align-items-center">
        <div class="col">
            <h1 class="display-6 fw-bold mb-0">
                <i class="fas fa-list-check me-3 text-primary"></i>Tasks
            </h1>
            <p class="text-muted mb-0">Manage and track all family tasks</p>
        </div>
        <div class="col-auto">
            <a href="@Url.Action("Create")" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i>New Task
            </a>
        </div>
    </div>
</div>

<!-- Filter and Search -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body">
        <div class="row align-items-center">
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" class="form-control" id="searchInput" placeholder="Search tasks...">
                </div>
            </div>
            <div class="col-md-2">
                <select class="form-select" id="statusFilter">
                    <option value="">All Status</option>
                    <option value="pending">Pending</option>
                    <option value="in progress">In Progress</option>
                    <option value="completed">Completed</option>
                </select>
            </div>
            <div class="col-md-2">
                <select class="form-select" id="priorityFilter">
                    <option value="">All Priority</option>
                    <option value="high">High</option>
                    <option value="medium">Medium</option>
                    <option value="low">Low</option>
                </select>
            </div>
            <div class="col-md-4 text-end">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-secondary active" id="gridView">
                        <i class="fas fa-th-large"></i>
                    </button>
                    <button type="button" class="btn btn-outline-secondary" id="listView">
                        <i class="fas fa-list"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.Any())
{
    <!-- Grid View -->
    <div id="tasksGrid" class="row">
        @foreach (var task in Model)
        {
            <div class="col-lg-4 col-md-6 mb-4 task-card" 
                 data-status="@task.Status.ToLower()" 
                 data-priority="@task.Priority.ToLower()" 
                 data-title="@task.Title.ToLower()" 
                 data-description="@task.Description.ToLower()">
                <div class="card border-0 shadow-sm h-100 task-item">
                    <div class="card-header bg-white border-0 py-3">
                        <div class="row align-items-center">
                            <div class="col">
                                <h6 class="card-title mb-0 fw-bold">@task.Title</h6>
                            </div>
                            <div class="col-auto">
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="@Url.Action("Details", new { id = task.Id })">
                                            <i class="fas fa-eye me-2"></i>View Details
                                        </a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Assign", new { taskId = task.Id })">
                                            <i class="fas fa-user-plus me-2"></i>Assign
                                        </a></li>
                                        @if (task.Status.ToLower() != "completed")
                                        {
                                            <li><hr class="dropdown-divider"></li>
                                            <li>
                                                <form method="post" action="@Url.Action("UpdateStatus", new { id = task.Id })" class="d-inline">
                                                    <input type="hidden" name="status" value="Completed" />
                                                    <button type="submit" class="dropdown-item text-success">
                                                        <i class="fas fa-check me-2"></i>Mark Complete
                                                    </button>
                                                </form>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text text-muted mb-3">@task.Description</p>
                        
                        <div class="row mb-3">
                            <div class="col-6">
                                <small class="text-muted d-block">Priority</small>
                                <span class="badge bg-@(task.Priority.ToLower() == "high" ? "danger" : task.Priority.ToLower() == "medium" ? "warning" : "secondary")">
                                    @task.Priority
                                </span>
                            </div>
                            <div class="col-6">
                                <small class="text-muted d-block">Status</small>
                                <span class="badge bg-@(task.Status.ToLower() == "completed" ? "success" : task.Status.ToLower() == "in progress" ? "info" : "secondary")">
                                    @task.Status
                                </span>
                            </div>
                        </div>
                        
                        @if (task.DueDate.HasValue)
                        {
                            <div class="mb-3">
                                <small class="text-muted d-block">Due Date</small>
                                <span class="@(task.DueDate.Value < DateTime.Now && task.Status.ToLower() != "completed" ? "text-danger fw-bold" : "")">
                                    <i class="fas fa-calendar me-1"></i>@task.DueDate.Value.ToString("MMM dd, yyyy")
                                </span>
                            </div>
                        }
                        
                        <div class="mb-3">
                            <small class="text-muted d-block">Created by</small>
                            <span>@task.CreatedByUserName</span>
                        </div>
                        
                        @if (task.Assignments.Any())
                        {
                            <div class="mb-3">
                                <small class="text-muted d-block">Assigned to</small>
                                <div class="d-flex flex-wrap gap-1">
                                    @foreach (var assignment in task.Assignments.Take(3))
                                    {
                                        <span class="badge bg-light text-dark">@assignment.UserName</span>
                                    }
                                    @if (task.Assignments.Count > 3)
                                    {
                                        <span class="badge bg-light text-dark">+@(task.Assignments.Count - 3) more</span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    <div class="card-footer bg-white border-0">
                        <div class="row align-items-center">
                            <div class="col">
                                <small class="text-muted">
                                    <i class="fas fa-clock me-1"></i>@task.CreatedAt.ToString("MMM dd, yyyy")
                                </small>
                            </div>
                            <div class="col-auto">
                                <a href="@Url.Action("Details", new { id = task.Id })" class="btn btn-primary btn-sm">
                                    View Details
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    <!-- List View (Hidden by default) -->
    <div id="tasksList" class="d-none">
        <div class="card border-0 shadow-sm">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="border-0">Task</th>
                            <th class="border-0">Priority</th>
                            <th class="border-0">Status</th>
                            <th class="border-0">Due Date</th>
                            <th class="border-0">Assigned To</th>
                            <th class="border-0">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var task in Model)
                        {
                            <tr class="task-row" 
                                data-status="@task.Status.ToLower()" 
                                data-priority="@task.Priority.ToLower()" 
                                data-title="@task.Title.ToLower()" 
                                data-description="@task.Description.ToLower()">
                                <td>
                                    <div>
                                        <h6 class="mb-1">@task.Title</h6>
                                        <small class="text-muted">@task.Description</small>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-@(task.Priority.ToLower() == "high" ? "danger" : task.Priority.ToLower() == "medium" ? "warning" : "secondary")">
                                        @task.Priority
                                    </span>
                                </td>
                                <td>
                                    <span class="badge bg-@(task.Status.ToLower() == "completed" ? "success" : task.Status.ToLower() == "in progress" ? "info" : "secondary")">
                                        @task.Status
                                    </span>
                                </td>
                                <td>
                                    @if (task.DueDate.HasValue)
                                    {
                                        <span class="@(task.DueDate.Value < DateTime.Now && task.Status.ToLower() != "completed" ? "text-danger fw-bold" : "")">
                                            @task.DueDate.Value.ToString("MMM dd, yyyy")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No due date</span>
                                    }
                                </td>
                                <td>
                                    @if (task.Assignments.Any())
                                    {
                                        <div class="d-flex flex-wrap gap-1">
                                            @foreach (var assignment in task.Assignments.Take(2))
                                            {
                                                <span class="badge bg-light text-dark small">@assignment.UserName</span>
                                            }
                                            @if (task.Assignments.Count > 2)
                                            {
                                                <span class="badge bg-light text-dark small">+@(task.Assignments.Count - 2)</span>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Unassigned</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <a href="@Url.Action("Details", new { id = task.Id })" class="btn btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("Assign", new { taskId = task.Id })" class="btn btn-outline-secondary">
                                            <i class="fas fa-user-plus"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-tasks fa-4x text-muted mb-4"></i>
        <h3 class="text-muted mb-3">No tasks found</h3>
        <p class="text-muted mb-4">Get started by creating your first task!</p>
        <a href="@Url.Action("Create")" class="btn btn-primary btn-lg">
            <i class="fas fa-plus me-2"></i>Create Your First Task
        </a>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#searchInput').on('keyup', function() {
                filterTasks();
            });
            
            // Filter functionality
            $('#statusFilter, #priorityFilter').on('change', function() {
                filterTasks();
            });
            
            // View toggle
            $('#gridView').on('click', function() {
                $(this).addClass('active');
                $('#listView').removeClass('active');
                $('#tasksGrid').removeClass('d-none');
                $('#tasksList').addClass('d-none');
            });
            
            $('#listView').on('click', function() {
                $(this).addClass('active');
                $('#gridView').removeClass('active');
                $('#tasksList').removeClass('d-none');
                $('#tasksGrid').addClass('d-none');
            });
            
            function filterTasks() {
                var searchTerm = $('#searchInput').val().toLowerCase();
                var statusFilter = $('#statusFilter').val().toLowerCase();
                var priorityFilter = $('#priorityFilter').val().toLowerCase();
                
                $('.task-card, .task-row').each(function() {
                    var $item = $(this);
                    var title = $item.data('title') || '';
                    var description = $item.data('description') || '';
                    var status = $item.data('status') || '';
                    var priority = $item.data('priority') || '';
                    
                    var matchesSearch = searchTerm === '' || 
                                      title.includes(searchTerm) || 
                                      description.includes(searchTerm);
                    var matchesStatus = statusFilter === '' || status === statusFilter;
                    var matchesPriority = priorityFilter === '' || priority === priorityFilter;
                    
                    if (matchesSearch && matchesStatus && matchesPriority) {
                        $item.show();
                    } else {
                        $item.hide();
                    }
                });
            }
        });
    </script>
}

